/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.hidetake.swagger.generator' version '2.18.2'

    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}


repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.25'  // or Swagger Codegen V3

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    runtimeOnly 'org.hsqldb:hsqldb'

    implementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

application {
    // Define the main class for the application.
    mainClass = 'org.slipp.masil.baseball.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}


swaggerSources {
    petstore {
        inputFile = file('src/main/swagger/api.yml')
        code {
            language = 'spring'
        }

    }
}
